library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
View(death)
shiny::runApp('nyc_death')
library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
#write_csv(death, "./data/cleaned_nyc_data.csv")
runApp('nyc_death')
library(ggplot2)
runApp('nyc_death')
runApp()
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
) %>%
na.rm()
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
) %>%
drop_na()
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
runApp('nyc_death')
runApp()
runApp()
min(death$year)
min(death$year)
min(death$year)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate)
)
min(death$year)
max(death$year)
death %>%
unique(race)
death %>%
unique("race")
unique(death$race_ethnicity)
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
setwd("~/Documents/Documents/Job Hunt/Blog/nyc_death_post/nyc_death")
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/Documents/Job Hunt/Blog/nyc_death_post")
runApp('nyc_death')
shiny::runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
year = factor(year)
)
write_csv(death, "./data/cleaned_nyc_data.csv")
unique(death$race_ethnicity)
runApp('nyc_death')
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
year = factor(year)
)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
year = as.character(year)
)
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
)
write_csv(death, "./data/cleaned_nyc_data.csv")
unique(death$race_ethnicity)
runApp('nyc_death')
shiny::runApp('nyc_death')
shiny::runApp('nyc_death')
library(tidyverse)
unique(death$leading_cause)
shiny::runApp('nyc_death')
runApp('nyc_death')
shiny::runApp('nyc_death')
install.packages("DT")
install.packages("DT")
shiny::runApp('nyc_death')
shiny::runApp()
shiny::runApp()
shiny::runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
runApp('nyc_death')
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
install.packages("data.table")
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
) %>%
str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia")
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
) %>%
str_replace("Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia")
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
str_replace("Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
leading_cause = str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
leading_cause = str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
leading_cause = str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
death = read_csv("./data/nyc_death.csv")
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate),
leading_cause = str_replace(leading_cause, "Influenza (Flu) and Pneumonia (J09-J18)", "Influenza & Pneumonia"))
shiny::runApp('nyc_death')
shiny::runApp('nyc_death')
shiny::runApp()
rsconnect::setAccountInfo(name='emilyahalford',
token='81D572BD604EAC079A408FBDD4A7DE0C',
secret='<SECRET>')
rsconnect::setAccountInfo(name='emilyahalford',
token='81D572BD604EAC079A408FBDD4A7DE0C',
secret='<SECRET>')
runApp()
shiny::runApp()
runApp()
setwd("~/Documents/Documents/Job Hunt/Blog/nyc_death_post")
$ git init -b main
git init -b main
library(tidyverse)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity",
leading_cause != "All Other Causes"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate))
death =
death %>%
mutate(
leading_cause = str_replace_all(leading_cause, "[//(//)]", ""),
leading_cause = str_replace(leading_cause, "Influenza Flu and Pneumonia J09-J18", "Influenza & Pneumonia"),
leading_cause = str_replace(leading_cause, "Accidents Except Drug Posioning V01-X39, X43, X45-X59, Y85-Y86", "Accidents"),
leading_cause = str_replace(leading_cause, "Cerebrovascular Disease Stroke: I60-I69", "Cerebrovascular Disease"),
leading_cause = str_replace(leading_cause, "Assault Homicide: Y87.1, X85-Y09", "Assault"),
leading_cause = str_replace(leading_cause, "Essential Hypertension and Renal Diseases (I10, I12)", "Hypertension & Renal Dis."),
leading_cause = str_replace(leading_cause, "Human Immunodeficiency Virus Disease HIV: B20-B24", "HIV"),
leading_cause = str_replace(leading_cause, "Diseases of Heart I00-I09, I11, I13, I20-I51", "Diseases of Heart"),
leading_cause = str_replace(leading_cause, "Alzheimer's Disease G30", "Alzheimer's Disease"),
leading_cause = str_replace(leading_cause, "Chronic Liver Disease and Cirrhosis K70, K73", "Chronic Liver Disease/Cirrhosis"),
leading_cause = str_replace(leading_cause, "Malignant Neoplasms Cancer: C00-C97", "Malignant Neoplasms"),
leading_cause = str_replace(leading_cause, "Diabetes Mellitus E10-E14", "Diabetes Mellitus"),
leading_cause = str_replace(leading_cause, "Mental and Behavioral Disorders due to Accidental Poisoning and Other Psychoactive Substance Use F11-F16, F18-F19, X40-X42, X44", "Accidental Poisoning/Substance Use"),
leading_cause = str_replace(leading_cause, "Septicemia A40-A41", "Septicemia"),
leading_cause = str_replace(leading_cause, "Chronic Lower Respiratory Diseases J40-J47", "Chronic Lower Respiratory Dis."),
leading_cause = str_replace(leading_cause, "Nephritis, Nephrotic Syndrome and Nephrisis N00-N07, N17-N19, N25-N27", "Nephritis"),
leading_cause = str_replace(leading_cause, "Certain Conditions originating in the Perinatal Period P00-P96", "Perinatal Period Conditions"),
leading_cause = str_replace(leading_cause, "Viral Hepatitis B15-B19", "Viral Hepatitis"),
leading_cause = str_replace(leading_cause, "Intentional Self-Harm Suicide: X60-X84, Y87.0", "Suicide"),
leading_cause = str_replace(leading_cause, "Congenital Malformations, Deformations, and Chromosomal Abnormalities Q00-Q99", "Congenital Malformations")
)
unique(death$leading_cause)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity",
leading_cause != "All Other Causes"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate))
death =
death %>%
mutate(
leading_cause = str_replace_all(leading_cause, "[//(//)]", ""),
leading_cause = str_replace(leading_cause, "Influenza Flu and Pneumonia J09-J18", "Influenza & Pneumonia"),
leading_cause = str_replace(leading_cause, "Accidents Except Drug Posioning V01-X39, X43, X45-X59, Y85-Y86", "Accidents"),
leading_cause = str_replace(leading_cause, "Cerebrovascular Disease Stroke: I60-I69", "Cerebrovascular Disease"),
leading_cause = str_replace(leading_cause, "Assault Homicide: Y87.1, X85-Y09", "Assault"),
leading_cause = str_replace(leading_cause, "Essential Hypertension and Renal Diseases (I10, I12)", "Hypertension & Renal Dis."),
leading_cause = str_replace(leading_cause, "Human Immunodeficiency Virus Disease HIV: B20-B24", "HIV"),
leading_cause = str_replace(leading_cause, "Diseases of Heart I00-I09, I11, I13, I20-I51", "Diseases of Heart"),
leading_cause = str_replace(leading_cause, "Alzheimer's Disease G30", "Alzheimer's Disease"),
leading_cause = str_replace(leading_cause, "Chronic Liver Disease and Cirrhosis K70, K73", "Chronic Liver Disease/Cirrhosis"),
leading_cause = str_replace(leading_cause, "Malignant Neoplasms Cancer: C00-C97", "Malignant Neoplasms"),
leading_cause = str_replace(leading_cause, "Diabetes Mellitus E10-E14", "Diabetes Mellitus"),
leading_cause = str_replace(leading_cause, "Mental and Behavioral Disorders due to Accidental Poisoning and Other Psychoactive Substance Use F11-F16, F18-F19, X40-X42, X44", "Accidental Poisoning/Substance Use"),
leading_cause = str_replace(leading_cause, "Septicemia A40-A41", "Septicemia"),
leading_cause = str_replace(leading_cause, "Chronic Lower Respiratory Diseases J40-J47", "Chronic Lower Respiratory Dis."),
leading_cause = str_replace(leading_cause, "Nephritis, Nephrotic Syndrome and Nephrisis N00-N07, N17-N19, N25-N27", "Nephritis"),
leading_cause = str_replace(leading_cause, "Certain Conditions originating in the Perinatal Period P00-P96", "Perinatal Period Conditions"),
leading_cause = str_replace(leading_cause, "Viral Hepatitis B15-B19", "Viral Hepatitis"),
leading_cause = str_replace(leading_cause, "Intentional Self-Harm Suicide: X60-X84, Y87.0", "Suicide"),
leading_cause = str_replace(leading_cause, "Congenital Malformations, Deformations, and Chromosomal Abnormalities Q00-Q99", "Congenital Malformations")
)
death = read_csv("./data/nyc_death.csv") %>%
janitor::clean_names() %>%
filter(
race_ethnicity != "Not Stated/Unknown",
race_ethnicity != "Other Race/ Ethnicity",
leading_cause != "All Other Causes"
) %>%
mutate(
deaths = as.numeric(deaths),
death_rate = as.numeric(death_rate),
age_adjusted_death_rate = as.numeric(age_adjusted_death_rate))
unique(deaths$leading_cause)
unique(death$leading_cause)
unique(death$leading_cause)
unique(death$leading_cause)
unique(death$leading_cause)
unique(death$leading_cause)
shiny::runApp('nyc_death')
